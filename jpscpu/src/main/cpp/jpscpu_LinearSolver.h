/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jpscpu_LinearSolver */

#ifndef _Included_jpscpu_LinearSolver
#define _Included_jpscpu_LinearSolver
#ifdef __cplusplus
extern "C" {
#endif
#undef jpscpu_LinearSolver_SUPERLU_DRIVE_0
#define jpscpu_LinearSolver_SUPERLU_DRIVE_0 0L
#undef jpscpu_LinearSolver_SUPERLU_DRIVE_1
#define jpscpu_LinearSolver_SUPERLU_DRIVE_1 1L
/*
 * Class:     jpscpu_LinearSolver
 * Method:    solve0
 * Signature: (III[D[I[I[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolver_solve0
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray);

/*
 * Class:     jpscpu_LinearSolver
 * Method:    solve1
 * Signature: (III[D[I[I[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolver_solve1
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray);

/*
 * Class:     jpscpu_LinearSolver
 * Method:    solve2
 * Signature: (III[D[I[I[D[I[I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolver_solve2
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jintArray, jintArray);

/*
 * Class:     jpscpu_LinearSolver
 * Method:    solve3
 * Signature: (III[D[I[I[D[I[I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolver_solve3
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jintArray, jintArray);

/*
 * Class:     jpscpu_LinearSolver
 * Method:    solve4
 * Signature: (III[D[I[I[D[I[I[I[D[DLjpscpu/SCformat;Ljpscpu/NCformat;[I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolver_solve4
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jintArray, jintArray, jintArray, jdoubleArray, jdoubleArray, jobject, jobject, jintArray);

/*
 * Class:     jpscpu_LinearSolver
 * Method:    solve5
 * Signature: (III[D[I[I[D[I[I[I[D[DII[D[I[I[I[I[II[D[I[I[I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolver_solve5
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jintArray, jintArray, jintArray, jdoubleArray, jdoubleArray, jint, jint, jdoubleArray, jintArray, jintArray, jintArray, jintArray, jintArray, jint, jdoubleArray, jintArray, jintArray, jintArray);

JNIEXPORT jint JNICALL Java_jpscpu_LinearSolver_solveMlpCbc
  (JNIEnv *, jobject, jint, jint, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray,
  jintArray, jintArray, jintArray, jdoubleArray);

JNIEXPORT jint JNICALL Java_jpscpu_LinearSolver_solveMlpSym
  (JNIEnv *, jobject, jint, jint, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray, jdoubleArray,
  jintArray, jintArray, jintArray, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
